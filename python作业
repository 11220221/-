{"metadata":{"orig_nbformat":4,"language_info":{"name":"python","version":"3.7.8","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"}},"nbformat_minor":5,"nbformat":4,"cells":[{"cell_type":"code","source":"print('Hello world')","metadata":{"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"Hello world\n","output_type":"stream"}],"id":"13ec322e-b816-46bf-a85a-c5ae2600fce1"},{"cell_type":"code","source":"print(\"Hello world!\")\nprint(\"_\"*50)\nprint(\"编程让设计更具创造力！\")\nprint(\"Everybody should learn how to code a computer, because it teaches you how to think, and allows designers more creative!\")","metadata":{"trusted":true},"execution_count":2,"outputs":[{"name":"stdout","text":"Hello world!\n__________________________________________________\n编程让设计更具创造力！\nEverybody should learn how to code a computer, because it teaches you how to think, and allows designers more creative!\n","output_type":"stream"}],"id":"1bcc1ec0-bdfc-4dbf-80cf-86b82920faa8"},{"cell_type":"code","source":"print(\"加：\",2+1)\nprint(\"减：\",9-5)\nprint(\"乘：\",4*6)\nprint(\"除：\", 8/2)\nprint(\"整除：\", 5//3)\nprint(\"余数：\", 7%5)\nprint(\"幂：\",2**5)","metadata":{"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"加： 3\n减： 4\n乘： 24\n除： 4.0\n整除： 1\n余数： 2\n幂： 32\n","output_type":"stream"}],"id":"8d95a335-a443-41a0-8095-d2f756663b94"},{"cell_type":"code","source":"x=6\ncandy=3*x-1\nprint(\"candy=\",candy)\nprint(\"candy=%.2f\"%candy) \nprint(\"candy={:.2f}\".format(candy))","metadata":{"trusted":true},"execution_count":4,"outputs":[{"name":"stdout","text":"candy= 17\ncandy=17.00\ncandy=17.00\n","output_type":"stream"}],"id":"a81f5512-1fce-4958-a7ba-791f5ecc5664"},{"cell_type":"code","source":"city_name=\"Xi'an\"\ncoordinate_longitude=108.942292\ncoordiante_latitude=34.261013\nprint(\"The longitude of the Xi'an coordinate is {lon:.2f}, and the latitude is {lat}.\".format(lon=coordinate_longitude,lat=coordiante_latitude))","metadata":{"trusted":true},"execution_count":5,"outputs":[{"name":"stdout","text":"The longitude of the Xi'an coordinate is 108.94, and the latitude is 34.261013.\n","output_type":"stream"}],"id":"c2fb3ae7-f8a6-4252-8fdd-34c4adcd92eb"},{"cell_type":"code","source":"x,y,b=3,9,5\nfunc_2=2*x+y+b\nprint(\"func_2={}\".format(x,y,b,func_2))\n","metadata":{"trusted":true},"execution_count":6,"outputs":[{"name":"stdout","text":"func_2=3\n","output_type":"stream"}],"id":"a860febe-518f-4ddd-931a-8a96c55ac3eb"},{"cell_type":"code","source":"lst_n=list(range(6,24,3)) \nprint(\"lst_n\")\nprint(\"The list length={}\".format(len(lst_n)))\nprint(\"Maximum value={}\".format(max(lst_n)))\nprint(\"Minimum value={}\".format(min(lst_n)))","metadata":{"trusted":true},"execution_count":7,"outputs":[{"name":"stdout","text":"lst_n\nThe list length=6\nMaximum value=21\nMinimum value=6\n","output_type":"stream"}],"id":"20463dce-5286-4a00-8464-8ea1f169be4e"},{"cell_type":"code","source":"lst_s=list(map(chr,range(100,110)))\nprint(lst_s)\nprint(\"_\"*50)\nprint(\"[2:8]->{}\".format(lst_s[2:8]))\nprint(\"[-5:-2]->{}\".format(lst_s[-5:-2]))\nprint(\"[-2:]->{}\".format(lst_s[-2:]))\nprint(\"[:6]->{}\".format(lst_s[:6]))\nprint(\"[:]->{}\".format(lst_s[:]))","metadata":{"trusted":true},"execution_count":8,"outputs":[{"name":"stdout","text":"['d', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm']\n__________________________________________________\n[2:8]->['f', 'g', 'h', 'i', 'j', 'k']\n[-5:-2]->['i', 'j', 'k']\n[-2:]->['l', 'm']\n[:6]->['d', 'e', 'f', 'g', 'h', 'i']\n[:]->['d', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm']\n","output_type":"stream"}],"id":"77983a3c-7599-4025-9b3a-9c130eec3f17"},{"cell_type":"code","source":"print(lst_s)\nprint(\"_\"*50)\nprint(\"[0:8:3]->{}\".format(lst_s[0:8:3]))\nprint(\"[::5]->{}\".format(lst_s[::5]))\nprint(\"[9:3:6]->{}\".format(lst_s[9:3:6]))\nprint(\"[20:3:-2]->{}\".format(lst_s[20:3:-2]))\nprint(\"[7::-2]->{}\".format(lst_s[7::-2]))\nprint(\"[:3:-2]->{}\".format(lst_s[:3:-2]))","metadata":{"trusted":true},"execution_count":9,"outputs":[{"name":"stdout","text":"['d', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm']\n__________________________________________________\n[0:8:3]->['d', 'g', 'j']\n[::5]->['d', 'i']\n[9:3:6]->[]\n[20:3:-2]->['m', 'k', 'i']\n[7::-2]->['k', 'i', 'g', 'e']\n[:3:-2]->['m', 'k', 'i']\n","output_type":"stream"}],"id":"aa4060e5-eda0-4137-9ce6-b54c6aa5e485"},{"cell_type":"code","source":"print(lst_s)\nprint(\"_\"*50)\nlst_s[5]=88\nprint(\"lst_s[5]=88->{}\".format(lst_s))\nlst_none=lst_s+[None]*5\nprint(\"lst_s+[None]*5->{}\".format(lst_none))\nlst_none[12]=2048\nprint(\"lst_none[12]=2048->{}\".format(lst_none))\nlst_none[-8:-2]=list(range(90,120,6))\nprint(\"lst_none[-8:-2]=list(range(90,120,6))->{}\".format(lst_none))\nlst_none[1:1]=[0,0,0,12]\nprint(\"lst_none[1:1]=[0,0,0,12]->{}\".format(lst_none))\ndel lst_none[3:]\nprint(\"del lst_none[-2:]->{}\".format(lst_none))","metadata":{"trusted":true},"execution_count":10,"outputs":[{"name":"stdout","text":"['d', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm']\n__________________________________________________\nlst_s[5]=88->['d', 'e', 'f', 'g', 'h', 88, 'j', 'k', 'l', 'm']\nlst_s+[None]*5->['d', 'e', 'f', 'g', 'h', 88, 'j', 'k', 'l', 'm', None, None, None, None, None]\nlst_none[12]=2048->['d', 'e', 'f', 'g', 'h', 88, 'j', 'k', 'l', 'm', None, None, 2048, None, None]\nlst_none[-8:-2]=list(range(90,120,6))->['d', 'e', 'f', 'g', 'h', 88, 'j', 90, 96, 102, 108, 114, None, None]\nlst_none[1:1]=[0,0,0,12]->['d', 0, 0, 0, 12, 'e', 'f', 'g', 'h', 88, 'j', 90, 96, 102, 108, 114, None, None]\ndel lst_none[-2:]->['d', 0, 0]\n","output_type":"stream"}],"id":"ee30a6e7-af51-4de0-b0c4-d245285795ac"},{"cell_type":"code","source":"lst_s_2=list(map(chr,range(90,120)))\nprint(lst_s_2)\nprint(\"_\"*50)\nlst_s_2.append(88)\nprint(\"lst_s_2.append(88)->{}\".format(lst_s_2))\nlst_s_2.append(list(range(60,90,3)))\nprint(\"lst_s_2.append(list(range(60,90,3)))->{}\".format(lst_s_2))\nlst_spechars=['*',')','*']\nlst_s_2.extend(lst_spechars)\nprint(\"lst_s_2.extend(lst_spechars)->{}\".format(lst_s_2))\nprint(\"lst_s_2.count('*')={}\".format(lst_s_2.count('*')))\nprint(\"lst_s_2.index('e')={}\".format(lst_s_2.index('e')))\nlst_s_2.insert(2,[1000,1200,1500])\nprint(\"lst_s_2.insert(2,[1000,1200,1500])->{}\".format(lst_s_2))\nprint(\"lst_s_2.pop(7)_popup->{}\".format(lst_s_2.pop(7)))\nprint(\"lst_s_2.pop(7)_retention->{}\".format(lst_s_2))\nlst_s_2.remove('*')\nprint(\"lst_s_2.remove('*')_retention->{}\".format(lst_s_2))\nlist_n_2=[2,42,6,95,4,3]\nlist_n_2.sort()\nprint(\"list_n_2.sort()->{}\".format(list_n_2))\n","metadata":{"trusted":true},"execution_count":11,"outputs":[{"name":"stdout","text":"['Z', '[', '\\\\', ']', '^', '_', '`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w']\n__________________________________________________\nlst_s_2.append(88)->['Z', '[', '\\\\', ']', '^', '_', '`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 88]\nlst_s_2.append(list(range(60,90,3)))->['Z', '[', '\\\\', ']', '^', '_', '`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 88, [60, 63, 66, 69, 72, 75, 78, 81, 84, 87]]\nlst_s_2.extend(lst_spechars)->['Z', '[', '\\\\', ']', '^', '_', '`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 88, [60, 63, 66, 69, 72, 75, 78, 81, 84, 87], '*', ')', '*']\nlst_s_2.count('*')=2\nlst_s_2.index('e')=11\nlst_s_2.insert(2,[1000,1200,1500])->['Z', '[', [1000, 1200, 1500], '\\\\', ']', '^', '_', '`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 88, [60, 63, 66, 69, 72, 75, 78, 81, 84, 87], '*', ')', '*']\nlst_s_2.pop(7)_popup->`\nlst_s_2.pop(7)_retention->['Z', '[', [1000, 1200, 1500], '\\\\', ']', '^', '_', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 88, [60, 63, 66, 69, 72, 75, 78, 81, 84, 87], '*', ')', '*']\nlst_s_2.remove('*')_retention->['Z', '[', [1000, 1200, 1500], '\\\\', ']', '^', '_', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 88, [60, 63, 66, 69, 72, 75, 78, 81, 84, 87], ')', '*']\nlist_n_2.sort()->[2, 3, 4, 6, 42, 95]\n","output_type":"stream"}],"id":"6543d457-c3e5-4edd-ace0-366e9c662b0b"},{"cell_type":"code","source":"tuple_1=3,5,7\nprint(\"tuple_1=3,5,7,->{}\".format(tuple_1))\nprint(\"3*(20*3,)->{}\".format(3*(20*3,)))\nprint(\"tuple((3,6,9))->{}\".format(tuple((3,6,9))))\nprint(\"tuple([3,6,9])->{}\".format(tuple([3,6,9])))","metadata":{"trusted":true},"execution_count":12,"outputs":[{"name":"stdout","text":"tuple_1=3,5,7,->(3, 5, 7)\n3*(20*3,)->(60, 60, 60)\ntuple((3,6,9))->(3, 6, 9)\ntuple([3,6,9])->(3, 6, 9)\n","output_type":"stream"}],"id":"0d41aa16-e20a-418c-b638-e1c1b5209c68"},{"cell_type":"code","source":"import random\nitems=[(0,[i for i in range(5)]),(1,[random.sample(list(range(120,150,3)),3)]),(2,'python')] \nprint(\"items->{}\".format(items))\ndic=dict(items)\nprint(\"dic=dict(items)->{}\".format(dic))\nprint(\"dic[1]->{}\".format(dic[1]))","metadata":{"trusted":true},"execution_count":13,"outputs":[{"name":"stdout","text":"items->[(0, [0, 1, 2, 3, 4]), (1, [[147, 123, 129]]), (2, 'python')]\ndic=dict(items)->{0: [0, 1, 2, 3, 4], 1: [[147, 123, 129]], 2: 'python'}\ndic[1]->[[147, 123, 129]]\n","output_type":"stream"}],"id":"b5928a96-f34c-441a-8f33-bcb958b41508"},{"cell_type":"code","source":"print(\"len(dic)->{}\".format(len(dic)))\ndic[3]=(random.random(),random.uniform(99,333))\nprint(\"dic[3]=(random.random(),random.uniform(99,333))->{}\".format(dic))\ndel dic[1]\nprint(\"del dic[1]->{}\".format(dic))\nprint(\"3 in dic->{}\".format(3 in dic))\nprint(\"5 in dic->{}\".format(5 in dic))\nprint(\"dic.keys()->{}\".format(dic.keys()))\nprint(\"dic.values()->{}\".format(dic.values()))\nprint(\"dic.items()->{}\".format(dic.items()))\nprint(\"_\"*50)\nprint(\"list(dic.keys())->{}\".format(list(dic.keys())))","metadata":{"trusted":true},"execution_count":14,"outputs":[{"name":"stdout","text":"len(dic)->3\ndic[3]=(random.random(),random.uniform(99,333))->{0: [0, 1, 2, 3, 4], 1: [[147, 123, 129]], 2: 'python', 3: (0.7837446121175952, 268.5816411319249)}\ndel dic[1]->{0: [0, 1, 2, 3, 4], 2: 'python', 3: (0.7837446121175952, 268.5816411319249)}\n3 in dic->True\n5 in dic->False\ndic.keys()->dict_keys([0, 2, 3])\ndic.values()->dict_values([[0, 1, 2, 3, 4], 'python', (0.7837446121175952, 268.5816411319249)])\ndic.items()->dict_items([(0, [0, 1, 2, 3, 4]), (2, 'python'), (3, (0.7837446121175952, 268.5816411319249))])\n__________________________________________________\nlist(dic.keys())->[0, 2, 3]\n","output_type":"stream"}],"id":"32b1af3d-db63-4666-9061-2c50bb0d69c8"},{"cell_type":"code","source":"lst_A=list(range(6,20,3))\nlst_B=list(range(100,150,15))\nprint(\"lst_A={},lst_B={}\".format(lst_A,lst_B))\ndic_2={0:lst_A,1:lst_B}\nprint(\"dic_2={}\".format(dic_2))\nprint(\"_\"*50)\ndic_assignment=dic_2\nprint(\"dic_assignment={}\".format(dic_assignment))\ndic_2.clear()\nprint(\"dic_2.clear()->{}\".format(dic_2))\nprint(\"dic_assignment={}\".format(dic_assignment))\ndic_2[5]=list(range(1,9,2))\nprint(\"dic_2[5]=list(range(1,9,2))->{}\".format(dic_2))\ndic_copy=dic_2.copy()\nprint(\"dic_copy=dic_2.copy()->{}\".format(dic_copy))\ndic_2[8]=[5,7]\nprint(\"dic_2[8]=[5,7]->{}\".format(dic_2))\nprint(\"dic_copy={}\".format(dic_copy))\ndic_copy[5].remove(5)\nprint(\"dic_copy[5].remove(5)->{}\".format(dic_copy))\ndic_copy.setdefault(6,[77,99]) \nprint(\"dic_copy.setdefault(6,[77,99])->{}\".format(dic_copy))\ndic_2.pop(5) \nprint(\"dic_2.pop(5)->{}\".format(dic_2))\ndic_update={8:[5,7,6,3,2],9:[3,2,33,55,66]}\nprint(\"dic_update={}\".format(dic_update))\ndic_2.update(dic_update) \nprint(\"dic_2.update(dic_update->{}\".format(dic_2))\nprint(\"dic_2.get(9)->{}\".format(dic_2.get(9)))\ndic_2.popitem() \nprint(\"dic_2.popitem()->{}\".format(dic_2))\n\ndic_3={}.fromkeys([0,1,2,3,4,'A']) \nprint(\"dic_3={}\"+\".fromkeys([0,1,2,3,4,'A'])->{}\".format(dic_3)) ","metadata":{"trusted":true},"execution_count":15,"outputs":[{"name":"stdout","text":"lst_A=[6, 9, 12, 15, 18],lst_B=[100, 115, 130, 145]\ndic_2={0: [6, 9, 12, 15, 18], 1: [100, 115, 130, 145]}\n__________________________________________________\ndic_assignment={0: [6, 9, 12, 15, 18], 1: [100, 115, 130, 145]}\ndic_2.clear()->{}\ndic_assignment={}\ndic_2[5]=list(range(1,9,2))->{5: [1, 3, 5, 7]}\ndic_copy=dic_2.copy()->{5: [1, 3, 5, 7]}\ndic_2[8]=[5,7]->{5: [1, 3, 5, 7], 8: [5, 7]}\ndic_copy={5: [1, 3, 5, 7]}\ndic_copy[5].remove(5)->{5: [1, 3, 7]}\ndic_copy.setdefault(6,[77,99])->{5: [1, 3, 7], 6: [77, 99]}\ndic_2.pop(5)->{8: [5, 7]}\ndic_update={8: [5, 7, 6, 3, 2], 9: [3, 2, 33, 55, 66]}\ndic_2.update(dic_update->{8: [5, 7, 6, 3, 2], 9: [3, 2, 33, 55, 66]}\ndic_2.get(9)->[3, 2, 33, 55, 66]\ndic_2.popitem()->{8: [5, 7, 6, 3, 2]}\ndic_3={}.fromkeys([0,1,2,3,4,'A'])->{0: None, 1: None, 2: None, 3: None, 4: None, 'A': None}\n","output_type":"stream"}],"id":"6adc6b1c-6dfa-4559-b156-aa842862c6bf"},{"cell_type":"code","source":"lst_s_3=list(\"Hello Python!\")\nprint(\"lst_s_3=list(\\\"Hello Python!\\\")->{}\".format(lst_s_3))\nprint(\"\\\"Hellow\\\"+\\\" Python!\\\"->{}\".format(\"Hellow\"+\" Python!\"))\nprint(\"\\\"+\\\".join(str(123456))->{}\".format(\"+\".join(str(123456))))\nprint(\"len(\\\"Hellow Python!\\\")->{}\".format(len(\"Hellow Python!\")))\ncoordinates=\"120.132007,30.300508,9.7\"\nprint(\"coordinates.split(\\\",\\\")->{}\".format(coordinates.split(\",\")))\nprint(\"eval(coordinates)->{}\".format(eval(coordinates)))\nprint(\"\\\"Hello Python!\\\".lower()->{}\".format(\"Hello Python!\".lower()))\nprint(\"\\\"Hello Python!\\\".upper()->{}\".format(\"Hello Python!\".upper()))\nprint(\"\\\"Hello Python!\\\"[6:]->{}\".format(\"Hello Python!\"[6:]))\nprint(\"\\\"    Hello Python!    \\\".strip()->{}\".format(\"    Hello Python!    \".strip()))\nprint(\"\\\"Hello Python!\\\".replace(\\\"Python\\\",\\\"Grasshopper\\\")->{}\".format(\"Hello Python!\".replace(\"Python\",\"Grasshopper\")))\nhello_lst=list(\"Hello Python!\")\nhello_lst.sort()\nprint(\"hello_lst.sort()>{}\".format(hello_lst))\nprint(\"\\\"Hello Python!\\\".find(\\\"Py\\\")->{}\".format(\"Hello Python!\".find(\"Py\")))","metadata":{"trusted":true},"execution_count":16,"outputs":[{"name":"stdout","text":"lst_s_3=list(\"Hello Python!\")->['H', 'e', 'l', 'l', 'o', ' ', 'P', 'y', 't', 'h', 'o', 'n', '!']\n\"Hellow\"+\" Python!\"->Hellow Python!\n\"+\".join(str(123456))->1+2+3+4+5+6\nlen(\"Hellow Python!\")->14\ncoordinates.split(\",\")->['120.132007', '30.300508', '9.7']\neval(coordinates)->(120.132007, 30.300508, 9.7)\n\"Hello Python!\".lower()->hello python!\n\"Hello Python!\".upper()->HELLO PYTHON!\n\"Hello Python!\"[6:]->Python!\n\"    Hello Python!    \".strip()->Hello Python!\n\"Hello Python!\".replace(\"Python\",\"Grasshopper\")->Hello Grasshopper!\nhello_lst.sort()>[' ', '!', 'H', 'P', 'e', 'h', 'l', 'l', 'n', 'o', 'o', 't', 'y']\n\"Hello Python!\".find(\"Py\")->6\n","output_type":"stream"}],"id":"1568a6e1-d5d4-45ae-b04b-dd64493759cc"},{"cell_type":"code","source":"from string import Template\ns_template_1=Template(\"$x,glorious,$x!\")\ns_1=s_template_1.substitute(x=\"Python\")\nprint(\"s_1=s_template_1.substitute(x=\\\"Python\\\")->{}\".format(s_1))\ns_template_2=Template(\"${x}thon is amazing!\")\ns_2=s_template_2.substitute(x=\"py\")\nprint(\"s_2=s_template_2.substitute(x=\\\"py\\\")->{}\".format(s_2))\ns_template_3=Template(\"$x and $y are both amazing!\")\nsubstitute_dict=dict([('x','Python'),('y','Grasshopper')])\nprint(\"substitute_dict={}\".format(substitute_dict))\ns_3=s_template_3.substitute(substitute_dict)\nprint(\"s_3=s_template_3.substitute(substitute_dict)->{}\".format(s_3))","metadata":{"trusted":true},"execution_count":17,"outputs":[{"name":"stdout","text":"s_1=s_template_1.substitute(x=\"Python\")->Python,glorious,Python!\ns_2=s_template_2.substitute(x=\"py\")->python is amazing!\nsubstitute_dict={'x': 'Python', 'y': 'Grasshopper'}\ns_3=s_template_3.substitute(substitute_dict)->Python and Grasshopper are both amazing!\n","output_type":"stream"}],"id":"354d5dc1-3883-4b93-bbe5-4ed07b1b2cfb"},{"cell_type":"code","source":"import re\npattern_1='Python'\ntext=\"Hello Python!\"\nprint(\"re.findall(pattern_1,text)->{}\".format(re.findall(pattern_1,text)))\npattern_2='python'\nprint(\"re.findall(pattern_2,text)->{}\".format(re.findall(pattern_2,text)))","metadata":{"trusted":true},"execution_count":18,"outputs":[{"name":"stdout","text":"re.findall(pattern_1,text)->['Python']\nre.findall(pattern_2,text)->[]\n","output_type":"stream"}],"id":"6e7b29c4-7c6d-48b7-8b44-4d5e84db5c78"},{"cell_type":"code","source":"print(\"re.findall('.ython','Hello Python!')->{}\".format(re.findall('.ython','Hello Python!')))\nprint(\"re.findall('.ython','Hello gython!')->{}\".format(re.findall('.ython','Hello gython!')))\nprint(\"re.findall('.ython','Hello gPython!')->{}\".format(re.findall('.ython','Hello gPython!')))\nprint(\"re.findall('.ython','Hello Pthon!')->{}\".format(re.findall('.ython','Hello Pthon!')))","metadata":{"trusted":true},"execution_count":19,"outputs":[{"name":"stdout","text":"re.findall('.ython','Hello Python!')->['Python']\nre.findall('.ython','Hello gython!')->['gython']\nre.findall('.ython','Hello gPython!')->['Python']\nre.findall('.ython','Hello Pthon!')->[]\n","output_type":"stream"}],"id":"9b898b77-14c9-41f7-89f4-61f36556b2ff"},{"cell_type":"code","source":"print(\"re.findall(r'w?cadesign\\.cn,w+\\.cadesign\\.cn','cadesign.cn,www.cadesign.cn')->{}\".format(re.findall(r'w?cadesign\\.cn,w+\\.cadesign\\.cn','cadesign.cn,www.cadesign.cn')))\nprint(\"re.findall(r'w{2}\"+\"\\.cadesign\\.cn','www.cadesign.cn')->{}\".format(re.findall(r'w{2}\\.cadesign\\.cn','www.cadesign.cn')))\nprint(\"re.findall(r'w{1,3}\"+\"\\.cadesign\\.cn','www.cadesign.cn')->{}\".format(re.findall(r'w{1,3}\\.cadesign\\.cn','www.cadesign.cn')))","metadata":{"trusted":true},"execution_count":20,"outputs":[{"name":"stdout","text":"re.findall(r'w?cadesign\\.cn,w+\\.cadesign\\.cn','cadesign.cn,www.cadesign.cn')->['cadesign.cn,www.cadesign.cn']\nre.findall(r'w{2}\\.cadesign\\.cn','www.cadesign.cn')->['ww.cadesign.cn']\nre.findall(r'w{1,3}\\.cadesign\\.cn','www.cadesign.cn')->['www.cadesign.cn']\n","output_type":"stream"}],"id":"40feddb9-7121-4a13-9ac7-5f0aac1ecddb"},{"cell_type":"code","source":"print(\"re.findall('[Py]*thon!','Hello Python!')->{}\".format(re.findall('[Py]*thon!','Hello Python!')))\nprint(\"re.findall('[Py]*thon!','Hello Pthon!')->{}\".format(re.findall('[Py]*thon!','Hello Pthon!')))\nprint(\"re.findall('[Py]*thon!','Hello ython!')->{}\".format(re.findall('[Py]*thon!','Hello ython!')))\nprint(\"re.findall('[Py]*thon!','Hello ython!')->{}\".format(re.findall('[Py]*thon!','Hello thon!')))","metadata":{"trusted":true},"execution_count":21,"outputs":[{"name":"stdout","text":"re.findall('[Py]*thon!','Hello Python!')->['Python!']\nre.findall('[Py]*thon!','Hello Pthon!')->['Pthon!']\nre.findall('[Py]*thon!','Hello ython!')->['ython!']\nre.findall('[Py]*thon!','Hello ython!')->['thon!']\n","output_type":"stream"}],"id":"7408c31a-469f-4bed-9002-983c3ade0da9"},{"cell_type":"code","source":"print(\"re.findall('python|grasshopper','python')->{}\".format(re.findall('python|grasshopper','python')))\nprint(\"re.findall('python|grasshopper','grasshopper')->{}\".format(re.findall('python|grasshopper','grasshopper')))\nprint(\"re.findall('python|grasshopper','grasshopper and python')->{}\".format(re.findall('python|grasshopper','grasshopper and python')))","metadata":{"trusted":true},"execution_count":22,"outputs":[{"name":"stdout","text":"re.findall('python|grasshopper','python')->['python']\nre.findall('python|grasshopper','grasshopper')->['grasshopper']\nre.findall('python|grasshopper','grasshopper and python')->['grasshopper', 'python']\n","output_type":"stream"}],"id":"2af4e830-ff79-435c-987c-b3bef7e3a717"},{"cell_type":"code","source":"print(\"re.findall('\\d','number=10')->{}\".format(re.findall('\\d','number=10')))\nprint(\"re.findall('\\D','number=10')->{}\".format(re.findall('\\D','number=10')))\nprint(\"re.findall('[^0-9]','number=10')->{}\".format(re.findall('[^0-9]','number=10')))","metadata":{"trusted":true},"execution_count":23,"outputs":[{"name":"stdout","text":"re.findall('\\d','number=10')->['1', '0']\nre.findall('\\D','number=10')->['n', 'u', 'm', 'b', 'e', 'r', '=']\nre.findall('[^0-9]','number=10')->['n', 'u', 'm', 'b', 'e', 'r', '=']\n","output_type":"stream"}],"id":"b1ba9431-85c4-4d49-850b-ee3650414de6"},{"cell_type":"code","source":"print(\"re.findall('[a-z]','python')->{}\".format(re.findall('[a-z]','python-3.0')))\nprint(\"re.search('[a-z]+','python')->{}\".format(re.search('[a-z]+','python')))\nif re.search('[a-z]+','python'):\n    print(\"re.search('[a-z]+','python')->found it!\")\nprint(\"re.split(',','Hello,,,,,,Python!')->{}\".format(re.split(',','Hello,,,,,,Python!')))\nprint(\"re.sub('Python','Grasshopper','Hello Python!')->{}\".format(re.sub('Python','Grasshopper','Hello Python!')))\n\npattern_compile=re.compile('Python')\nprint(\"pattern_compile.findall('Hello,,,,,,Python!')->{}\".format(pattern_compile.findall('Hello,,,,,,Python!')))\n\nif re.match('p','python'):\n    print(\"re.match('p','python')->found it!\")","metadata":{"trusted":true},"execution_count":24,"outputs":[{"name":"stdout","text":"re.findall('[a-z]','python')->['p', 'y', 't', 'h', 'o', 'n']\nre.search('[a-z]+','python')-><re.Match object; span=(0, 6), match='python'>\nre.search('[a-z]+','python')->found it!\nre.split(',','Hello,,,,,,Python!')->['Hello', '', '', '', '', '', 'Python!']\nre.sub('Python','Grasshopper','Hello Python!')->Hello Grasshopper!\npattern_compile.findall('Hello,,,,,,Python!')->['Python']\nre.match('p','python')->found it!\n","output_type":"stream"}],"id":"1fea1262-e020-4b6c-88e6-b978851a2cf6"},{"cell_type":"code","source":"print(\"\\'python\\'.find(\\'python\\')->{}\".format('python'.find('python')))\nprint(\"\\'python\\'.find(\\'thon\\')->{}\".format('python'.find('thon')))\nprint(\"\\'python\\'.find(\\'a\\')->{}\".format('python'.find('a')))\nprint(\"\\'p\\' in \\'python\\'->{}\".format('p' in 'python'))","metadata":{"trusted":true},"execution_count":25,"outputs":[{"name":"stdout","text":"'python'.find('python')->0\n'python'.find('thon')->2\n'python'.find('a')->-1\n'p' in 'python'->True\n","output_type":"stream"}],"id":"cbbcbb6e-9dfb-41d9-85a2-38855b4c50ab"},{"cell_type":"code","source":"print(\"\\'Hello,,,,,,Python!\\'.split(',')->{}\".format( 'Hello,,,,,,Python!'.split(',')))\nprint(\"\\'Hello Python!\\'.replace(\\'Python\\',\\'Grasshopper\\')->{}\".format( 'Hello Python!'.replace('Python','Grasshopper')))","metadata":{"trusted":true},"execution_count":26,"outputs":[{"name":"stdout","text":"'Hello,,,,,,Python!'.split(',')->['Hello', '', '', '', '', '', 'Python!']\n'Hello Python!'.replace('Python','Grasshopper')->Hello Grasshopper!\n","output_type":"stream"}],"id":"8756f3af-69e4-4f87-ac92-1fbbecd46d22"},{"cell_type":"code","source":"match_1=re.match(r'www\\.(.*)\\..{3}','www.python.org')\nprint(\"match_1.gourp(1)->{}\".format(match_1.group(1)))\nprint(\"match_1.start(1)->{}\".format(match_1.start(1)))\nprint(\"match_1.end(1)->{}\".format(match_1.end(1)))\nprint(\"match_1.span(1)->{}\".format(match_1.span(1)))\nmatch_2=re.match(r'www\\.(.*)\\.(.{3})','www.python.org')\nprint(\"match_2.group(1)->{}\".format(match_2.group(1)))\nprint(\"match_2.group(2)->{}\".format(match_2.group(2)))","metadata":{"trusted":true},"execution_count":27,"outputs":[{"name":"stdout","text":"match_1.gourp(1)->python\nmatch_1.start(1)->4\nmatch_1.end(1)->10\nmatch_1.span(1)->(4, 10)\nmatch_2.group(1)->python\nmatch_2.group(2)->org\n","output_type":"stream"}],"id":"c1ead389-8d89-4cba-89f9-3bf81b490c4b"},{"cell_type":"code","source":"lst_1=list(range(29,37,2))\nprint(\"lst_1={}\".format(lst_1))\nprint(\"_\"*50)\nprint(\"for i in lst_1:\")\nfor i in lst_1:\n    print(i)\nprint(\"for i in range(len(lst_1)):\")\nfor i in range(len(lst_1)):\n    print(\"idx={},val={}\".format(i,lst_1[i]))\nprint(\"+\"*50)   \ndic_4=dict(a=2,b=3,c=6,d=0)\nprint(\"dic_4={}\".format(dic_4))\nprint(\"_\"*50)\nprint(\"for k in dic_4:\")\nfor k in dic_4:\n    print(k)\nprint(\"for k,v in dic_4.items():\")\nfor k,v in dic_4.items():\n    print(\"key={},val={}\".format(k,v))","metadata":{"trusted":true},"execution_count":28,"outputs":[{"name":"stdout","text":"lst_1=[29, 31, 33, 35]\n__________________________________________________\nfor i in lst_1:\n29\n31\n33\n35\nfor i in range(len(lst_1)):\nidx=0,val=29\nidx=1,val=31\nidx=2,val=33\nidx=3,val=35\n++++++++++++++++++++++++++++++++++++++++++++++++++\ndic_4={'a': 2, 'b': 3, 'c': 6, 'd': 0}\n__________________________________________________\nfor k in dic_4:\na\nb\nc\nd\nfor k,v in dic_4.items():\nkey=a,val=2\nkey=b,val=3\nkey=c,val=6\nkey=d,val=0\n","output_type":"stream"}],"id":"b9b75393-d296-4e26-926a-a05006e4cb54"},{"cell_type":"code","source":"lst_1=list(range(12,24,3))\nprint(\"lst_1={}\".format(lst_1))\nprint(\"_\"*50)\nprint(\"for i in lst_1:\")\nfor i in lst_1:\n    print(i)\nprint(\"for i in range(len(lst_1)):\")\nfor i in range(len(lst_1)):\n    print(\"idx={},val={}\".format(i,lst_1[i]))\nprint(\"+\"*50)   \ndic_4=dict(a=3,b=5,c=6,d=9)\nprint(\"dic_4={}\".format(dic_4))\nprint(\"_\"*50)\nprint(\"for k in dic_4:\")\nfor k in dic_4:\n    print(k)\nprint(\"for k,v in dic_4.items():\")\nfor k,v in dic_4.items():\n    print(\"key={},val={}\".format(k,v))","metadata":{"trusted":true},"execution_count":29,"outputs":[{"name":"stdout","text":"lst_1=[12, 15, 18, 21]\n__________________________________________________\nfor i in lst_1:\n12\n15\n18\n21\nfor i in range(len(lst_1)):\nidx=0,val=12\nidx=1,val=15\nidx=2,val=18\nidx=3,val=21\n++++++++++++++++++++++++++++++++++++++++++++++++++\ndic_4={'a': 3, 'b': 5, 'c': 6, 'd': 9}\n__________________________________________________\nfor k in dic_4:\na\nb\nc\nd\nfor k,v in dic_4.items():\nkey=a,val=3\nkey=b,val=5\nkey=c,val=6\nkey=d,val=9\n","output_type":"stream"}],"id":"d5648931-2e07-4a62-9c68-bad3d57ab1b2"},{"cell_type":"code","source":"x=6\nwhile x<=100:\n    print(\"x={}\".format(x))\n    x+=30","metadata":{"trusted":true},"execution_count":30,"outputs":[{"name":"stdout","text":"x=6\nx=36\nx=66\nx=96\n","output_type":"stream"}],"id":"6e59cb5f-23fc-425d-8d4b-2460dfa7f0c4"},{"cell_type":"code","source":"x=5\nwhile x<=100:\n    print(\"x={}\".format(x))\n    x+=50\n    if x>=50:break    \n    \nimport sys\nprint(\"sys.maxsize={}\".format(sys.maxsize))\nfor i in range(sys.maxsize):\n    print(\"i={}\".format(i)) \n    i+=10\n    if i>=30:break","metadata":{"trusted":true},"execution_count":31,"outputs":[{"name":"stdout","text":"x=5\nsys.maxsize=9223372036854775807\ni=0\ni=1\ni=2\ni=3\ni=4\ni=5\ni=6\ni=7\ni=8\ni=9\ni=10\ni=11\ni=12\ni=13\ni=14\ni=15\ni=16\ni=17\ni=18\ni=19\ni=20\n","output_type":"stream"}],"id":"1d4fd1b4-4b22-4464-b1cb-c6006c613dc8"},{"cell_type":"code","source":"lst_a=[3,4,5,6]\nlst_b=['point_a','point_b','point_c','point_d']\nzip_lst=zip(lst_a,lst_b) \nprint(\"zip_lst=zip(lst_a,lst_b)->{}\".format(zip_lst))\nprint(\"dict(zip_lst)->{}\".format(dict(zip_lst)))\n\nzip_lst=zip(lst_a,lst_b) \nfor a,b in zip_lst:\n    print(a,b)\n    \nzip_lst=zip(lst_a,lst_b)\na,b=zip(*zip_lst)\nprint(\"a={},b={}\".format(a,b))","metadata":{"trusted":true},"execution_count":32,"outputs":[{"name":"stdout","text":"zip_lst=zip(lst_a,lst_b)-><zip object at 0x7f068464f5f0>\ndict(zip_lst)->{3: 'point_a', 4: 'point_b', 5: 'point_c', 6: 'point_d'}\n3 point_a\n4 point_b\n5 point_c\n6 point_d\na=(3, 4, 5, 6),b=('point_a', 'point_b', 'point_c', 'point_d')\n","output_type":"stream"}],"id":"ea3a2677-7759-4aa5-bb65-3c061a272aa9"},{"cell_type":"code","source":"lst_c=['point_a','point_b','point_c','point_d']\ndic_4={}\nfor idx,value in enumerate(lst_c):\n    dic_4[idx]=value\nprint(\"dic_4={}\".format(dic_4))\nprint(\"dict((i,v) for i,v in enumerate(lst_c))->{}\".format(dict((i,v) for i,v in enumerate(lst_c)))) #list comprehension\nprint(\"_\"*50)\nfor i,(a,b) in enumerate(zip(lst_a,lst_b)):\n    print('%d:%s,%s'%(i,a,b))","metadata":{"trusted":true},"execution_count":33,"outputs":[{"name":"stdout","text":"dic_4={0: 'point_a', 1: 'point_b', 2: 'point_c', 3: 'point_d'}\ndict((i,v) for i,v in enumerate(lst_c))->{0: 'point_a', 1: 'point_b', 2: 'point_c', 3: 'point_d'}\n__________________________________________________\n0:3,point_a\n1:4,point_b\n2:5,point_c\n3:6,point_d\n","output_type":"stream"}],"id":"ad6ce318-5a24-438a-9aac-339818fd397f"},{"cell_type":"code","source":"print(\"[x*x for x in range(3,37,5) if x%2==0]->{}\".format([x*x for x in range(5,40,5) if x%2==0]))\nprint(\"[(x,y) for x in range(3)for y in range(2)]->{}\".format([(x,y) for x in range(3)for y in range(2)]))\nprint(\"[(x,y) for x,y in zip(range(3),range(2))]->{}\".format([(x,y) for x,y in zip(range(3),range(2))]))\nnested_list=[[a for a in range(1,10,3)],2,3,[b for b in range(60,100,7)],[[c for c in range(1111,2222,33)],3,9]]\nprint(\"[[a for a in range(1,10,3)],2,3,[b for b in range(60,100,7)],[[c for c in range(1000,2000,120)],3,9]]->{}\".format(nested_list)) \n\nflatten_lst=lambda lst: [m for n_lst in lst for m in flatten_lst(n_lst)] if type(lst) is list else [lst]\nprint(\"flatten_lst(nested_list)->{}\".format(flatten_lst(nested_list)))","metadata":{"trusted":true},"execution_count":34,"outputs":[{"name":"stdout","text":"[x*x for x in range(3,37,5) if x%2==0]->[100, 400, 900]\n[(x,y) for x in range(3)for y in range(2)]->[(0, 0), (0, 1), (1, 0), (1, 1), (2, 0), (2, 1)]\n[(x,y) for x,y in zip(range(3),range(2))]->[(0, 0), (1, 1)]\n[[a for a in range(1,10,3)],2,3,[b for b in range(60,100,7)],[[c for c in range(1000,2000,120)],3,9]]->[[1, 4, 7], 2, 3, [60, 67, 74, 81, 88, 95], [[1111, 1144, 1177, 1210, 1243, 1276, 1309, 1342, 1375, 1408, 1441, 1474, 1507, 1540, 1573, 1606, 1639, 1672, 1705, 1738, 1771, 1804, 1837, 1870, 1903, 1936, 1969, 2002, 2035, 2068, 2101, 2134, 2167, 2200], 3, 9]]\nflatten_lst(nested_list)->[1, 4, 7, 2, 3, 60, 67, 74, 81, 88, 95, 1111, 1144, 1177, 1210, 1243, 1276, 1309, 1342, 1375, 1408, 1441, 1474, 1507, 1540, 1573, 1606, 1639, 1672, 1705, 1738, 1771, 1804, 1837, 1870, 1903, 1936, 1969, 2002, 2035, 2068, 2101, 2134, 2167, 2200, 3, 9]\n","output_type":"stream"}],"id":"c89f5772-bfc9-4e4d-99c5-ce1b7f81849e"},{"cell_type":"code","source":"x=6\nif x<0:\n    print('It is negative.')\nelif x==0:\n    print('Equal to zero.')\nelif 0<x<10:\n    print('Positive but smaller than 10')\nelse:\n    print('Positive and larger than or equal to 10.')","metadata":{"trusted":true},"execution_count":35,"outputs":[{"name":"stdout","text":"Positive but smaller than 10\n","output_type":"stream"}],"id":"394b1b03-edd1-4c6c-b751-8d818fce7fe1"},{"cell_type":"code","source":"x=y=[3,5,7]\nz=[4,6,8]\nprint(\"x==y->{}\".format(x==y))\nprint(\"x is y->{}\".format(x is y))\nprint(\"x==z->{}\".format(x==z))\nprint(\"x is z->{}\".format(x is z))\nprint(\"x is not y->{}\".format(x is not y))\nprint(\"x is not z->{}\".format(x is not z))\nprint(\"id_x:{};id_y:{};id_z:{}\".format(id(x),id(y),id(z)))\ndel x[2]\nprint(\"x={},y={},z={} after del x[2]\".format(x,y,z))","metadata":{"trusted":true},"execution_count":36,"outputs":[{"name":"stdout","text":"x==y->True\nx is y->True\nx==z->False\nx is z->False\nx is not y->False\nx is not z->True\nid_x:139665967231376;id_y:139665967231376;id_z:139665967230880\nx=[3, 5],y=[3, 5],z=[4, 6, 8] after del x[2]\n","output_type":"stream"}],"id":"af1491f2-c3b1-48fe-a7b5-697a3755c598"},{"cell_type":"code","source":"x=[6,9,12]\nprint(\"5 in x->{}\".format(3 in x))\nprint(\"7 in x->{}\".format(0 in x))\nprint(\"5 not in x->{}\".format(3 not in x))\nprint(\"7 not in x->{}\".format(0 not in x))","metadata":{"trusted":true},"execution_count":37,"outputs":[{"name":"stdout","text":"5 in x->False\n7 in x->False\n5 not in x->True\n7 not in x->True\n","output_type":"stream"}],"id":"0783c0a9-98f4-4d16-841e-d751090f6dd5"},{"cell_type":"code","source":"a,b,c=6,12,24\nif c>a and c<b:\n    print('a<c<b')\nelse: print('a<c<b kidding!!!')","metadata":{"trusted":true},"execution_count":38,"outputs":[{"name":"stdout","text":"a<c<b kidding!!!\n","output_type":"stream"}],"id":"b17c9f16-21bc-422a-a9a6-4800258a2d36"},{"cell_type":"code","source":"print(\"simple_func(6,9)->{}\".format(simple_func(6,9)))\nprint(\"simple_func(9,6)->{}\".format(simple_func(9,6)))\nprint(\"simple_func(y=9,x=6)->{}\".format(simple_func(y=9,x=6)))","metadata":{"trusted":true},"execution_count":41,"outputs":[{"name":"stdout","text":"simple_func(6,9)->45\nsimple_func(9,6)->87\nsimple_func(y=9,x=6)->45\n","output_type":"stream"}],"id":"97c31f24-119f-43a2-8769-96558a5a27c3"},{"cell_type":"code","source":"def fibonacci(s,count):\n    fib_lst=[0,1]\n    fib_part=[]\n    if s==0 or s==1:\n        fib_part[:]=fib_lst\n        for i in range(count-2):\n            fib_part.append(fib_part[-1]+fib_part[-2])\n    else:\n        while True:\n            fib_lst[:]=[fib_lst[1],fib_lst[0]+fib_lst[1]]\n            #print(fib_lst)\n            if fib_lst[1]-s>=0:break\n        fib_part[:]=fib_lst\n        if abs(fib_lst[0]-s)>=abs(fib_lst[1]-s):\n            for i in range(count-1):\n                fib_part.append(fib_part[-1]+fib_part[-2])\n            fib_part.pop(0)\n        else:\n            for i in range(count-2):\n                fib_part.append(fib_part[-1]+fib_part[-2])\n    return fib_part\n\nprint(\"fibonacci(6,9)->{}\".format(fibonacci(6,9)))\nprint(\"fibonacci(7,9)->{}\".format(fibonacci(7,9)))","metadata":{"trusted":true},"execution_count":42,"outputs":[{"name":"stdout","text":"fibonacci(6,9)->[5, 8, 13, 21, 34, 55, 89, 144, 233]\nfibonacci(7,9)->[8, 13, 21, 34, 55, 89, 144, 233, 377]\n","output_type":"stream"}],"id":"21b7cfcd-1996-4633-a50c-fe0c66651a08"},{"cell_type":"code","source":"def factorial(n):\n    if n==1:\n        return 1\n    else:\n        return n*factorial(n-1)\nprint(factorial(5))","metadata":{"trusted":true},"execution_count":43,"outputs":[{"name":"stdout","text":"120\n","output_type":"stream"}],"id":"c53159df-3ce3-4f89-af0d-fbbd8a722bbc"}]}